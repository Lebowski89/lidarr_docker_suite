---

################################
# APPDATA
################################

- name: Create themepark appdata directory
  ansible.builtin.file:
    path: '{{ lookup("vars", lidarr_prefix + "_themepark_paths_location") }}'
    state: directory
    owner: '{{ lookup("vars", lidarr_prefix + "_themepark_env_puid") }}'
    group: '{{ lookup("vars", lidarr_prefix + "_themepark_env_pgid") }}'
    mode: '0755'

################################
# CONTAINER
################################

- name: Create themepark container
  community.docker.docker_container:
    name: '{{ lookup("vars", lidarr_prefix + "_themepark_basics_name") }}'
    image: '{{ lookup("vars", lidarr_prefix + "_themepark_basics_image_repo") }}:{{ lookup("vars", lidarr_prefix + "_themepark_basics_image_tag") }}'
    networks: '{{ lookup("vars", lidarr_prefix + "_network_backend") }}'
    env:
      PUID: '{{ lookup("vars", lidarr_prefix + "_themepark_env_puid") }}'
      PGID: '{{ lookup("vars", lidarr_prefix + "_themepark_env_pgid") }}'
      TZ: '{{ lookup("vars", lidarr_prefix + "_themepark_env_timezone") }}'
    ports:
      - '{{ lookup("vars", lidarr_prefix + "_themepark_ports_host") }}:{{ lookup("vars", lidarr_prefix + "_themepark_ports_cont") }}'
    volumes: '{{ lookup("vars", lidarr_prefix + "_themepark_bind_mount") }}'
    restart_policy: '{{ lookup("vars", lidarr_prefix + "_themepark_basics_restart_policy") }}'

